// === Prisma Client Generator ===

// === PostgreSQL Datasource ===
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// === Enums ===

// Admin roles
enum AdminRole {
  ADMIN // Basic moderation access
  SUPER_ADMIN // Full access
}

// Types of moderation actions
enum ModerationActionType {
  SUSPEND_VENDOR
  REMOVE_PRODUCT
  APPROVE_VENDOR
  REJECT_VENDOR
  WARN_VENDOR
  SYSTEM_NOTE
}

// Entity types targeted by moderation
enum TargetType {
  VENDOR
  PRODUCT
  USER
  ORDER
}

// Moderation resolution statuses
enum ModerationStatus {
  PENDING
  RESOLVED
  ESCALATED
  DISMISSED
}

// User roles
enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

// Vendor account statuses
enum VendorStatus {
  PENDING
  APPROVED
  REJECTED
  SUSPENDED
}

//
// === Models ===
//

// User model
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  vendor Vendor?
  admin  Admin?
}

// Vendor model
model Vendor {
  id        String       @id @default(uuid())
  userId    String       @unique
  name      String
  status    VendorStatus @default(PENDING)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  user User @relation(fields: [userId], references: [id])
}

// Admin model
model Admin {
  id        String    @id @default(uuid())
  userId    String    @unique
  name      String
  role      AdminRole @default(ADMIN)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user    User        @relation(fields: [userId], references: [id])
  actions ActionLog[]
}

// ActionLog model (moderation logs)
model ActionLog {
  id         String               @id @default(uuid())
  adminId    String
  actionType ModerationActionType
  targetType TargetType
  targetId   String
  reason     String?
  notes      String?
  status     ModerationStatus     @default(PENDING)
  createdAt  DateTime             @default(now())
  resolvedAt DateTime?

  admin Admin @relation(fields: [adminId], references: [id])

  @@index([targetType])
  @@index([targetId])
  @@index([status])
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/admin-service"
}
